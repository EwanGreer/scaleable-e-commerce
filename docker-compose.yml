services:
  user:
    container_name: user_service
    build:
      context: .
      dockerfile: ./services/user/config/Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./services/user:/app/services/user
    networks:
      - local-kafka

  user_db:
    image: postgres
    container_name: user_db
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: example

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - local-kafka

  broker:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - local-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: broker
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092 # POINT HERE TO POLL
      KAFKA_CREATE_TOPICS: "user_registrations_v1:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - broker
    ports:
      - "7777:8080"
    networks:
      - local-kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

networks:
  local-kafka:
    driver: bridge
